<?php

/**
 * @file
 * Provides moneris payment method for Drupal Commerce.
 */

define('COMMERCE_MONERIS_CANADA', 'ca');
define('COMMERCE_MONERIS_USA', 'us');

define('COMMERCE_MONERIS_PRODUCTION', 'prod');
define('COMMERCE_MONERIS_TEST', 'test');

/**
 * Implements hook_permission().
 */
function commerce_moneris_permission() {
  return array(
    'administer moneris' => array(
      'title' => t('Administer Moneris'),
      'description' => t('Perform administrative actions with Moneris.'),
    ),
  );
}

/**
 * Returns available Moneris environments.
 *
 * @param bool $translated
 *   A boolean indicating whether returned strings should be translated or not.
 *
 * @return array
 *   An array of available Moneris environments.
 */
function commerce_moneris_environments($translated = FALSE) {
  $environments = array(
    COMMERCE_MONERIS_TEST => 'Test',
    COMMERCE_MONERIS_PRODUCTION => 'Production',
  );

  if ($translated) {
    $environments = array_map('t', $environments);
  }

  return $environments;
}

/**
 * Returns available Moneris gateways (countries).
 *
 * @param bool $translated
 *   A boolean indicating whether returned strings should be translated or not.
 *
 * @return array
 *   An array of available Moneris gateways (countries).
 */
function commerce_moneris_gateways($translated = FALSE) {
  $gateways = array(
    COMMERCE_MONERIS_CANADA => t('Canada'),
    COMMERCE_MONERIS_USA => t('US'),
  );

  if ($translated) {
    $gateways = array_map('t', $gateways);
  }

  return $gateways;
}

/**
 * Logs Moneris API-specific debug message.
 *
 * @param string $module
 *   The module initiating the logging.
 * @param string $message
 *   The message to be added to the log.
 * @param int $order_id
 *   The order object.
 * @param string $gateway
 *   The gateway the request was sent to.
 * @param string $environment
 *   The environment being used.
 * @param string|null $link
 *   Link to relevant page providing more information.
 */
function commerce_moneris_log($module, $message, $order_id, $gateway, $environment, $link = NULL) {
  watchdog($module, '@order_id-@gateway-@environment: !message', array(
    '@order_id' => $order_id,
    '@gateway' => $gateway,
    '@environment' => $environment,
    '!message' => $message,
  ), WATCHDOG_DEBUG, $link);
}
